
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ВыгружатьВРазрезеВидаОбработки 	= Истина;
	ВыгружатьСУчетомИерархии 		= Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьПредставлениеКоманд(Элементы.ГруппаСтраницы.ТекущаяСтраница);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиЭлементовФормы

&НаКлиенте
Процедура ОтборВидыДополнительныхОтчетовПриИзменении(Элемент)
	ИспользоватьОтборПоВидуОбработки = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ГруппаСтраницыПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	УстановитьПредставлениеКоманд(ТекущаяСтраница);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Получить(Команда)
	
	Если Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаДополнительныеОтчетыИОбработки Тогда 
		ПолучитьВнешниеОбработки();
	Иначе
	 	ПолучитьРасширения();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Выгрузить(Команда)
	
	ТекстСообщения = НСтр("ru = 'Для выгрузки внешней обработки (отчета) в файл рекомендуется установить расширение для веб-клиента 1С:Предприятие.'");
	Обработчик = Новый ОписаниеОповещения("ВыгрузитьВФайлЗавершение", ЭтотОбъект);

	ОбщегоНазначенияКлиент.ПоказатьВопросОбУстановкеРасширенияРаботыСФайлами(Обработчик, ТекстСообщения);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Обработчик результата работы процедуры ВыгрузитьВФайл.
&НаКлиенте
Процедура ВыгрузитьВФайлЗавершение(Подключено, ПараметрыВыгрузки) Экспорт
	
	Если ПараметрыВыгрузки = Неопределено Тогда
		ПараметрыВыгрузки = Новый Структура("Подключено", Подключено);
	Иначе
		ПараметрыВыгрузки.Вставить("Подключено", Подключено);
	КонецЕсли;
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	Диалог.МножественныйВыбор = Ложь;
	Если Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаДополнительныеОтчетыИОбработки Тогда
		Диалог.Фильтр = ДополнительныеОтчетыИОбработкиКлиентСервер.ФильтрДиалоговВыбораИСохранения();
		Диалог.Заголовок = НСтр("ru = 'Укажите каталог для сохранения внешних обработок и отчетов'");
		Диалог.ИндексФильтра = 1;
	Иначе
		Диалог.Заголовок = НСтр("ru = 'Выберите каталого для сохранения расширения конфигурации'");
		Диалог.Фильтр    = НСтр("ru = 'Файлы расширений конфигурации (*.cfe)|*.cfe|Все файлы (*.*)|*.*'");
	КонецЕсли;
	
	Обработчик = Новый ОписаниеОповещения("ВыгрузитьФайлВыборФайла", ЭтотОбъект, ПараметрыВыгрузки);
	Диалог.Показать(Обработчик);
	
КонецПроцедуры

// Обработчик результата работы процедуры ВыгрузитьВФайл.
&НаКлиенте
Процедура ВыгрузитьФайлВыборФайла(ВыбранныеФайлы, ПараметрыВыгрузки) Экспорт
	
	Если ВыбранныеФайлы <> Неопределено Тогда
		
		ПолноеИмяФайла = ВыбранныеФайлы[0];
		ПолучаемыеФайлы = Новый Массив;
		
		Если Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаДополнительныеОтчетыИОбработки Тогда 
			ТаблицаОбхода = ЭтаФорма["ТаблицаВнешнихОбработок"];
			ЭтоОбработки = Истина;
		Иначе
			ТаблицаОбхода = ЭтаФорма["ТаблицаРасширений"];
			ЭтоОбработки = Ложь;
		КонецЕсли;
		
		Для Каждого СтрокаВыгружаемогоФайла ИЗ ТаблицаОбхода Цикл
			
			Если ЭтоОбработки Тогда
				АдресХранилища = ДополнительныеОтчетыИОбработкиВызовСервера.ПоместитьВХранилище(СтрокаВыгружаемогоФайла.Ссылка, Неопределено);
			Иначе
				АдресХранилища = СохранитьРасширениеНаСервере(СтрокаВыгружаемогоФайла.ИдентификаторРасширения);	
			КонецЕсли;
			
			Наименование = СтрокаВыгружаемогоФайла.ДополнениеКНаименованиюКаталога + СтрокаВыгружаемогоФайла.Наименование; 
			
			Если Не ПараметрыВыгрузки.Подключено Тогда
				ПолучитьФайл(АдресХранилища, ПолноеИмяФайла + Наименование, Истина);
				Возврат;
			КонецЕсли;

			ПолучаемыеФайлы.Добавить(Новый ОписаниеПередаваемогоФайла(Наименование, АдресХранилища));

		КонецЦикла;
		
		Обработчик = Новый ОписаниеОповещения("ОбработкаРезультатаНеТребуется", ЭтотОбъект);
		НачатьПолучениеФайлов(Обработчик, ПолучаемыеФайлы, ПолноеИмяФайла, Ложь);
		
	КонецЕсли;
	
КонецПроцедуры

// Обработчик результата работы процедуры ВыгрузитьВФайл.
&НаКлиенте
Процедура ОбработкаРезультатаНеТребуется(ПолученныеФайлы, ДополнительныеПараметры) Экспорт
	
	ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Выгрузка файлов завершилась.");
	Возврат;
	
КонецПроцедуры

#Область ВнешниеОбработки

&НаСервере
Процедура ПолучитьВнешниеОбработки()
	
	ТаблицаВнешнихОбработок.Очистить();
	ТаблицаЗначений = ТаблицаВнешнихОбработок.Выгрузить().СкопироватьКолонки();
	
	МассивВидовДополнительныхОтчетовИОбработок = ОтборВидыДополнительныхОтчетов.ВыгрузитьЗначения();
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ГруппаОтбор", ?(ЗначениеЗаполнено(ГруппаОтбор), ГруппаОтбор, Неопределено));
	Запрос.УстановитьПараметр("УстановитьОтборПоВидуОбработки", ИспользоватьОтборПоВидуОбработки);
	Запрос.УстановитьПараметр("ВидыОбработок", МассивВидовДополнительныхОтчетовИОбработок);
	Запрос.Текст 		= ПолучитьТекстЗапросаДляВыгрузкиВнешнихОбработок(ВыгружатьСУчетомИерархии);
	РезультатЗапроса 	= Запрос.Выполнить();

	Если Не ВыгружатьСУчетомИерархии Тогда
				
		Выборка = РезультатЗапроса.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			НовСтрока = ТаблицаЗначений.Добавить();
			ЗаполнитьЗначенияСвойств(НовСтрока, Выборка); 
			Если ВыгружатьВРазрезеВидаОбработки Тогда
				НовСтрока.ДополнениеКНаименованиюКаталога = Выборка.Вид + "\";
			КонецЕсли;
		КонецЦикла;
		
	Иначе  		
				
		ВыборкаПоИерархии = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией, "Ссылка");
		ВыбратьЭлементыВИерархии(ВыборкаПоИерархии, ТаблицаЗначений, "", ВыгружатьВРазрезеВидаОбработки);	
		
	КонецЕсли;
	
	ТаблицаВнешнихОбработок.Загрузить(ТаблицаЗначений);

КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьТекстЗапросаДляВыгрузкиВнешнихОбработок(Знач ВыгружатьСУчетомИерархии)

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДополнительныеОтчетыИОбработки.Ссылка КАК Ссылка,
	|	ПРЕДСТАВЛЕНИЕ(ДополнительныеОтчетыИОбработки.Вид) КАК Вид,
	|	ДополнительныеОтчетыИОбработки.ИмяФайла КАК Наименвоание,
	|	ДополнительныеОтчетыИОбработки.Родитель КАК Родитель,
	|	ДополнительныеОтчетыИОбработки.ЭтоГруппа КАК ЭтоГруппа,
	|	ДополнительныеОтчетыИОбработки.Наименование КАК Наименование     
	|ИЗ
	|	Справочник.ДополнительныеОтчетыИОбработки КАК ДополнительныеОтчетыИОбработки
	|ГДЕ
	|	ВЫБОР
	|			КОГДА &ГруппаОтбор = НЕОПРЕДЕЛЕНО
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ДополнительныеОтчетыИОбработки.Родитель В ИЕРАРХИИ (&ГруппаОтбор)
	|		КОНЕЦ
	|	И ВЫБОР
	|			КОГДА НЕ &УстановитьОтборПоВидуОбработки
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ДополнительныеОтчетыИОбработки.Вид В (&ВидыОбработок)
	|		КОНЕЦ                                               
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЭтоГруппа УБЫВ,
	|	Наименование
	|ИТОГИ ПО
	|	Ссылка ИЕРАРХИЯ";

	Если Не ВыгружатьСУчетомИерархии Тогда
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ГДЕ", "ГДЕ
			|  НЕ ДополнительныеОтчетыИОбработки.ЭтоГруппа И ");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ИТОГИ ПО
			|	Ссылка ИЕРАРХИЯ",
			"");
		
	КонецЕсли;
	
	Возврат ТекстЗапроса;

КонецФункции // ПолучитьТекстЗапросаДляВыгрузкиВнешнихОбработок()

&НаСервереБезКонтекста
Процедура ВыбратьЭлементыВИерархии(ВыборкаСИерархией, ТаблицаЗначений, Знач ПрефиксТекущегоНаименованияКаталога, ВыгружатьВРазрезеВидаОбработки)
	
	ЭтоПервыйОбход = ПрефиксТекущегоНаименованияКаталога = "";
	
	Пока ВыборкаСИерархией.Следующий() Цикл
		
		Если ВыборкаСИерархией.ТипЗаписи()=ТипЗаписиЗапроса.ИтогПоИерархии Тогда
			
			ПрефиксНаименованияКаталога = ?(ЭтоПервыйОбход, "", ПрефиксТекущегоНаименованияКаталога + "\" ) + ВыборкаСИерархией.Наименование;
			ВыбратьЭлементыВИерархии(ВыборкаСИерархией.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией, "Ссылка"), 
				ТаблицаЗначений, ПрефиксНаименованияКаталога, ВыгружатьВРазрезеВидаОбработки);
			
		ИначеЕсли ВыборкаСИерархией.ТипЗаписи()=ТипЗаписиЗапроса.ИтогПоГруппировке Тогда
			
			ВыбратьЭлементыВИерархии(ВыборкаСИерархией.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией), 
				ТаблицаЗначений, ПрефиксТекущегоНаименованияКаталога, ВыгружатьВРазрезеВидаОбработки);
				
		ИначеЕсли ВыборкаСИерархией.ТипЗаписи()=ТипЗаписиЗапроса.ДетальнаяЗапись Тогда
			
			Если ВыборкаСИерархией.ЭтоГруппа Тогда
				Продолжить;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ПрефиксТекущегоНаименованияКаталога) Тогда
				ПрефиксТекущегоНаименованияКаталога = ПрефиксТекущегоНаименованияКаталога + "\";
			КонецЕсли;
			
			НоваяСтрока = ТаблицаЗначений.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаСИерархией);
			НоваяСтрока.ДополнениеКНаименованиюКаталога = ?(ВыгружатьВРазрезеВидаОбработки, ВыборкаСИерархией.Вид + "\" + ПрефиксТекущегоНаименованияКаталога, ПрефиксТекущегоНаименованияКаталога);
			
		КонецЕсли; 
          
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область Расширения

Процедура ПолучитьРасширения()
	
	ТаблицаРасширений.Очистить();
	КолекцияРасширенийКонфигурации = РасширенияКонфигурации.Получить();	
	Для Каждого Расширение ИЗ КолекцияРасширенийКонфигурации Цикл
		НовСтрока = ТаблицаРасширений.Добавить();
		НовСтрока.ИдентификаторРасширения = Расширение.УникальныйИдентификатор;
		НовСтрока.Наименование = Расширение.Имя
				+ "_" + Расширение.Версия + ".cfe";
		НовСтрока.ДополнениеКНаименованиюКаталога = Расширение.Назначение; 
	КонецЦикла;  	

КонецПроцедуры

&НаСервере
Функция СохранитьРасширениеНаСервере(ИдентификаторРасширения)
	
	Расширение = НайтиРасширение(ИдентификаторРасширения);
	
	Если Расширение <> Неопределено Тогда
		Возврат ПоместитьВоВременноеХранилище(Расширение.ПолучитьДанные(), ЭтотОбъект.УникальныйИдентификатор);
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

&НаСервере
Функция НайтиРасширение(ИдентификаторРасширения)
	
	Отбор = Новый Структура;
	Отбор.Вставить("УникальныйИдентификатор", Новый УникальныйИдентификатор(ИдентификаторРасширения));
	Расширения = РасширенияКонфигурации.Получить(Отбор);
	
	Расширение = Неопределено;
	
	Если Расширения.Количество() = 1 Тогда
		Расширение = Расширения[0];
	КонецЕсли;
	
	Возврат Расширение;
	
КонецФункции

#КонецОбласти

&НаКлиенте
Процедура УстановитьПредставлениеКоманд(ТекущаяСтраница)
	
	Если ТекущаяСтраница = Элементы.ГруппаДополнительныеОтчетыИОбработки Тогда
		Элементы.Получить.Заголовок = "Получить внешние обработки и отчеты";
		Элементы.Выгрузить.Заголовок = "Выгрузить внешине обработки и отчеты";
	Иначе
		Элементы.Получить.Заголовок = "Получить расширения";	
		Элементы.Выгрузить.Заголовок = "Выгрузить расширения";
	КонецЕсли;     	

КонецПроцедуры // УстановитьПредставлениеКоманд()

#КонецОбласти
