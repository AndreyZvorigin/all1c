
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ВыгружатьВРазрезеВидаОбработки = Истина;
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПолучитьВнешинеОбработки(Команда)
	ПолучитьВнешниеОбработки();
КонецПроцедуры

&НаКлиенте
Процедура Выгрузить(Команда)
	
	ТекстСообщения = НСтр("ru = 'Для выгрузки внешней обработки (отчета) в файл рекомендуется установить расширение для веб-клиента 1С:Предприятие.'");
	Обработчик = Новый ОписаниеОповещения("ВыгрузитьВФайлЗавершение", ЭтотОбъект);

	ОбщегоНазначенияКлиент.ПоказатьВопросОбУстановкеРасширенияРаботыСФайлами(Обработчик, ТекстСообщения);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Обработчик результата работы процедуры ВыгрузитьВФайл.
&НаКлиенте
Процедура ВыгрузитьВФайлЗавершение(Подключено, ПараметрыВыгрузки) Экспорт
	
	Если ПараметрыВыгрузки = Неопределено Тогда
		ПараметрыВыгрузки = Новый Структура("Подключено", Подключено);
	Иначе
		ПараметрыВыгрузки.Вставить("Подключено", Подключено);
	КонецЕсли;
	
	ДиалогСохраненияФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	ДиалогСохраненияФайла.Фильтр = ДополнительныеОтчетыИОбработкиКлиентСервер.ФильтрДиалоговВыбораИСохранения();
	ДиалогСохраненияФайла.ИндексФильтра = 1;
	ДиалогСохраненияФайла.МножественныйВыбор = Ложь;
	ДиалогСохраненияФайла.Заголовок = НСтр("ru = 'Укажите каталог'");
	
	Обработчик = Новый ОписаниеОповещения("ВыгрузитьФайлВыборФайла", ЭтотОбъект, ПараметрыВыгрузки);
	ДиалогСохраненияФайла.Показать(Обработчик);
	
КонецПроцедуры

// Обработчик результата работы процедуры ВыгрузитьВФайл.
&НаКлиенте
Процедура ВыгрузитьФайлВыборФайла(ВыбранныеФайлы, ПараметрыВыгрузки) Экспорт
	
	Если ВыбранныеФайлы <> Неопределено Тогда
		
		ПолноеИмяФайла = ВыбранныеФайлы[0];
		ПолучаемыеФайлы = Новый Массив;
		
		Для Каждого ВнешОбработки ИЗ ТаблицаВнешнихОбработок Цикл
			
			НаименованиеОбработки = ВнешОбработки.ДополнениеКНаименованиюКаталога + ВнешОбработки.ИмяФайла; 
			АдресХранилища = ДополнительныеОтчетыИОбработкиВызовСервера.ПоместитьВХранилище(ВнешОбработки.Ссылка, Неопределено);

			Если Не ПараметрыВыгрузки.Подключено Тогда
				ПолучитьФайл(АдресХранилища, ПолноеИмяФайла + НаименованиеОбработки, Истина);
				Возврат;
			КонецЕсли;

			ПолучаемыеФайлы.Добавить(Новый ОписаниеПередаваемогоФайла(НаименованиеОбработки, АдресХранилища));
		КонецЦикла;
		
		Обработчик = Новый ОписаниеОповещения("ОбработкаРезультатаНеТребуется", ЭтотОбъект);
		НачатьПолучениеФайлов(Обработчик, ПолучаемыеФайлы, ПолноеИмяФайла, Ложь);
		
	КонецЕсли;
	
КонецПроцедуры

// Обработчик результата работы процедуры ВыгрузитьВФайл.
&НаКлиенте
Процедура ОбработкаРезультатаНеТребуется(ПолученныеФайлы, ДополнительныеПараметры) Экспорт
	
	ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Выгрузка файлов завершилась.");
	Возврат;
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьВнешниеОбработки()
	
	ТаблицаВнешнихОбработок.Очистить();
	ТаблицаЗначений = ТаблицаВнешнихОбработок.Выгрузить().СкопироватьКолонки();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ДополнительныеОтчетыИОбработки.Ссылка КАК Ссылка,
	|	Представление(ДополнительныеОтчетыИОбработки.Вид) КАК Вид,
	|	ДополнительныеОтчетыИОбработки.ИмяФайла КАК ИмяФайла,
	|	ДополнительныеОтчетыИОбработки.Родитель КАК Родитель,
	|	ДополнительныеОтчетыИОбработки.ЭтоГруппа КАК ЭтоГруппа,
	|	ДополнительныеОтчетыИОбработки.Наименование КАК Наименование
	|ИЗ
	|	Справочник.ДополнительныеОтчетыИОбработки КАК ДополнительныеОтчетыИОбработки
	|УПОРЯДОЧИТЬ ПО
	|	ЭтоГруппа УБЫВ,
	|	Наименование
	|ИТОГИ
	|ПО
	|	Ссылка ИЕРАРХИЯ";

	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаПоИерархии = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией, "Ссылка");
	ВыбратьЭлементыВИерархии(ВыборкаПоИерархии, ТаблицаЗначений, "", ВыгружатьВРазрезеВидаОбработки);	
	
	ТаблицаВнешнихОбработок.Загрузить(ТаблицаЗначений);

КонецПроцедуры

&НаСервереБезКонтекста
Процедура ВыбратьЭлементыВИерархии(ВыборкаСИерархией, ТаблицаЗначений, Знач ПрефиксТекущегоНаименованияКаталога, ВыгружатьВРазрезеВидаОбработки)
	
	ЭтоПервыйОбход = ПрефиксТекущегоНаименованияКаталога = "";
	
	Пока ВыборкаСИерархией.Следующий() Цикл
		
		Если ВыборкаСИерархией.ТипЗаписи()=ТипЗаписиЗапроса.ИтогПоИерархии Тогда
			
			ПрефиксНаименованияКаталога = ?(ЭтоПервыйОбход, "", ПрефиксТекущегоНаименованияКаталога + "\" ) + ВыборкаСИерархией.Наименование;
			ВыбратьЭлементыВИерархии(ВыборкаСИерархией.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией, "Ссылка"), 
				ТаблицаЗначений, ПрефиксНаименованияКаталога, ВыгружатьВРазрезеВидаОбработки);
			
		ИначеЕсли ВыборкаСИерархией.ТипЗаписи()=ТипЗаписиЗапроса.ИтогПоГруппировке Тогда
			
			ВыбратьЭлементыВИерархии(ВыборкаСИерархией.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией), 
				ТаблицаЗначений, ПрефиксТекущегоНаименованияКаталога, ВыгружатьВРазрезеВидаОбработки);
				
		ИначеЕсли ВыборкаСИерархией.ТипЗаписи()=ТипЗаписиЗапроса.ДетальнаяЗапись Тогда
			
			Если ВыборкаСИерархией.ЭтоГруппа Тогда
				Продолжить;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ПрефиксТекущегоНаименованияКаталога) Тогда
				ПрефиксТекущегоНаименованияКаталога = ПрефиксТекущегоНаименованияКаталога + "\";
			КонецЕсли;
			
			НоваяСтрока = ТаблицаЗначений.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаСИерархией);
			НоваяСтрока.ДополнениеКНаименованиюКаталога = ?(ВыгружатьВРазрезеВидаОбработки, ВыборкаСИерархией.Вид + "\" + ПрефиксТекущегоНаименованияКаталога, ПрефиксТекущегоНаименованияКаталога);
			
		КонецЕсли; 
          
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти
